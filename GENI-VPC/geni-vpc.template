{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "InstanceType": {
      "Description": "WebServer EC2 instance type",
      "Type": "String",
      "Default": "t2.small",
      "AllowedValues": [
        "t1.micro",
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    }
  },
  "Mappings": {
    "Region2Examples": {
      "us-east-1": {
        "Examples": "https://s3.amazonaws.com/cloudformation-examples-us-east-1"
      },
      "us-west-2": {
        "Examples": "https://s3-us-west-2.amazonaws.com/cloudformation-examples-us-west-2"
      },
      "us-west-1": {
        "Examples": "https://s3-us-west-1.amazonaws.com/cloudformation-examples-us-west-1"
      },
      "eu-west-1": {
        "Examples": "https://s3-eu-west-1.amazonaws.com/cloudformation-examples-eu-west-1"
      },
      "eu-central-1": {
        "Examples": "https://s3-eu-central-1.amazonaws.com/cloudformation-examples-eu-central-1"
      },
      "ap-southeast-1": {
        "Examples": "https://s3-ap-southeast-1.amazonaws.com/cloudformation-examples-ap-southeast-1"
      },
      "ap-northeast-1": {
        "Examples": "https://s3-ap-northeast-1.amazonaws.com/cloudformation-examples-ap-northeast-1"
      },
      "ap-northeast-2": {
        "Examples": "https://s3-ap-northeast-2.amazonaws.com/cloudformation-examples-ap-northeast-2"
      },
      "ap-southeast-2": {
        "Examples": "https://s3-ap-southeast-2.amazonaws.com/cloudformation-examples-ap-southeast-2"
      },
      "ap-south-1": {
        "Examples": "https://s3-ap-south-1.amazonaws.com/cloudformation-examples-ap-south-1"
      },
      "us-east-2": {
        "Examples": "https://s3-us-east-2.amazonaws.com/cloudformation-examples-us-east-2"
      },
      "sa-east-1": {
        "Examples": "https://s3-sa-east-1.amazonaws.com/cloudformation-examples-sa-east-1"
      },
      "cn-north-1": {
        "Examples": "https://s3.cn-north-1.amazonaws.com.cn/cloudformation-examples-cn-north-1"
      }
    },
    "AWSInstanceType2Arch": {
      "t1.micro": {
        "Arch": "PV64"
      },
      "t2.nano": {
        "Arch": "HVM64"
      },
      "t2.micro": {
        "Arch": "HVM64"
      },
      "t2.small": {
        "Arch": "HVM64"
      },
      "t2.medium": {
        "Arch": "HVM64"
      },
      "t2.large": {
        "Arch": "HVM64"
      },
      "m1.small": {
        "Arch": "PV64"
      },
      "m1.medium": {
        "Arch": "PV64"
      },
      "m1.large": {
        "Arch": "PV64"
      },
      "m1.xlarge": {
        "Arch": "PV64"
      },
      "m2.xlarge": {
        "Arch": "PV64"
      },
      "m2.2xlarge": {
        "Arch": "PV64"
      },
      "m2.4xlarge": {
        "Arch": "PV64"
      },
      "m3.medium": {
        "Arch": "HVM64"
      },
      "m3.large": {
        "Arch": "HVM64"
      },
      "m3.xlarge": {
        "Arch": "HVM64"
      },
      "m3.2xlarge": {
        "Arch": "HVM64"
      },
      "m4.large": {
        "Arch": "HVM64"
      },
      "m4.xlarge": {
        "Arch": "HVM64"
      },
      "m4.2xlarge": {
        "Arch": "HVM64"
      },
      "m4.4xlarge": {
        "Arch": "HVM64"
      },
      "m4.10xlarge": {
        "Arch": "HVM64"
      },
      "c1.medium": {
        "Arch": "PV64"
      },
      "c1.xlarge": {
        "Arch": "PV64"
      },
      "c3.large": {
        "Arch": "HVM64"
      },
      "c3.xlarge": {
        "Arch": "HVM64"
      },
      "c3.2xlarge": {
        "Arch": "HVM64"
      },
      "c3.4xlarge": {
        "Arch": "HVM64"
      },
      "c3.8xlarge": {
        "Arch": "HVM64"
      },
      "c4.large": {
        "Arch": "HVM64"
      },
      "c4.xlarge": {
        "Arch": "HVM64"
      },
      "c4.2xlarge": {
        "Arch": "HVM64"
      },
      "c4.4xlarge": {
        "Arch": "HVM64"
      },
      "c4.8xlarge": {
        "Arch": "HVM64"
      },
      "g2.2xlarge": {
        "Arch": "HVMG2"
      },
      "g2.8xlarge": {
        "Arch": "HVMG2"
      },
      "r3.large": {
        "Arch": "HVM64"
      },
      "r3.xlarge": {
        "Arch": "HVM64"
      },
      "r3.2xlarge": {
        "Arch": "HVM64"
      },
      "r3.4xlarge": {
        "Arch": "HVM64"
      },
      "r3.8xlarge": {
        "Arch": "HVM64"
      },
      "i2.xlarge": {
        "Arch": "HVM64"
      },
      "i2.2xlarge": {
        "Arch": "HVM64"
      },
      "i2.4xlarge": {
        "Arch": "HVM64"
      },
      "i2.8xlarge": {
        "Arch": "HVM64"
      },
      "d2.xlarge": {
        "Arch": "HVM64"
      },
      "d2.2xlarge": {
        "Arch": "HVM64"
      },
      "d2.4xlarge": {
        "Arch": "HVM64"
      },
      "d2.8xlarge": {
        "Arch": "HVM64"
      },
      "hi1.4xlarge": {
        "Arch": "HVM64"
      },
      "hs1.8xlarge": {
        "Arch": "HVM64"
      },
      "cr1.8xlarge": {
        "Arch": "HVM64"
      },
      "cc2.8xlarge": {
        "Arch": "HVM64"
      }
    },
    "AWSInstanceType2NATArch": {
      "t1.micro": {
        "Arch": "NATPV64"
      },
      "t2.nano": {
        "Arch": "NATHVM64"
      },
      "t2.micro": {
        "Arch": "NATHVM64"
      },
      "t2.small": {
        "Arch": "NATHVM64"
      },
      "t2.medium": {
        "Arch": "NATHVM64"
      },
      "t2.large": {
        "Arch": "NATHVM64"
      },
      "m1.small": {
        "Arch": "NATPV64"
      },
      "m1.medium": {
        "Arch": "NATPV64"
      },
      "m1.large": {
        "Arch": "NATPV64"
      },
      "m1.xlarge": {
        "Arch": "NATPV64"
      },
      "m2.xlarge": {
        "Arch": "NATPV64"
      },
      "m2.2xlarge": {
        "Arch": "NATPV64"
      },
      "m2.4xlarge": {
        "Arch": "NATPV64"
      },
      "m3.medium": {
        "Arch": "NATHVM64"
      },
      "m3.large": {
        "Arch": "NATHVM64"
      },
      "m3.xlarge": {
        "Arch": "NATHVM64"
      },
      "m3.2xlarge": {
        "Arch": "NATHVM64"
      },
      "m4.large": {
        "Arch": "NATHVM64"
      },
      "m4.xlarge": {
        "Arch": "NATHVM64"
      },
      "m4.2xlarge": {
        "Arch": "NATHVM64"
      },
      "m4.4xlarge": {
        "Arch": "NATHVM64"
      },
      "m4.10xlarge": {
        "Arch": "NATHVM64"
      },
      "c1.medium": {
        "Arch": "NATPV64"
      },
      "c1.xlarge": {
        "Arch": "NATPV64"
      },
      "c3.large": {
        "Arch": "NATHVM64"
      },
      "c3.xlarge": {
        "Arch": "NATHVM64"
      },
      "c3.2xlarge": {
        "Arch": "NATHVM64"
      },
      "c3.4xlarge": {
        "Arch": "NATHVM64"
      },
      "c3.8xlarge": {
        "Arch": "NATHVM64"
      },
      "c4.large": {
        "Arch": "NATHVM64"
      },
      "c4.xlarge": {
        "Arch": "NATHVM64"
      },
      "c4.2xlarge": {
        "Arch": "NATHVM64"
      },
      "c4.4xlarge": {
        "Arch": "NATHVM64"
      },
      "c4.8xlarge": {
        "Arch": "NATHVM64"
      },
      "g2.2xlarge": {
        "Arch": "NATHVMG2"
      },
      "g2.8xlarge": {
        "Arch": "NATHVMG2"
      },
      "r3.large": {
        "Arch": "NATHVM64"
      },
      "r3.xlarge": {
        "Arch": "NATHVM64"
      },
      "r3.2xlarge": {
        "Arch": "NATHVM64"
      },
      "r3.4xlarge": {
        "Arch": "NATHVM64"
      },
      "r3.8xlarge": {
        "Arch": "NATHVM64"
      },
      "i2.xlarge": {
        "Arch": "NATHVM64"
      },
      "i2.2xlarge": {
        "Arch": "NATHVM64"
      },
      "i2.4xlarge": {
        "Arch": "NATHVM64"
      },
      "i2.8xlarge": {
        "Arch": "NATHVM64"
      },
      "d2.xlarge": {
        "Arch": "NATHVM64"
      },
      "d2.2xlarge": {
        "Arch": "NATHVM64"
      },
      "d2.4xlarge": {
        "Arch": "NATHVM64"
      },
      "d2.8xlarge": {
        "Arch": "NATHVM64"
      },
      "hi1.4xlarge": {
        "Arch": "NATHVM64"
      },
      "hs1.8xlarge": {
        "Arch": "NATHVM64"
      },
      "cr1.8xlarge": {
        "Arch": "NATHVM64"
      },
      "cc2.8xlarge": {
        "Arch": "NATHVM64"
      }
    },
    "AWSRegionArch2AMI": {
      "us-east-1": {
        "PV64": "ami-2a69aa47",
        "HVM64": "ami-6869aa05",
        "HVMG2": "ami-a41a3fb3"
      },
      "us-west-2": {
        "PV64": "ami-7f77b31f",
        "HVM64": "ami-7172b611",
        "HVMG2": "ami-caf253aa"
      },
      "us-west-1": {
        "PV64": "ami-a2490dc2",
        "HVM64": "ami-31490d51",
        "HVMG2": "ami-00347e60"
      },
      "eu-west-1": {
        "PV64": "ami-4cdd453f",
        "HVM64": "ami-f9dd458a",
        "HVMG2": "ami-e2f7bd91"
      },
      "eu-central-1": {
        "PV64": "ami-6527cf0a",
        "HVM64": "ami-ea26ce85",
        "HVMG2": "ami-d2ff04bd"
      },
      "ap-northeast-1": {
        "PV64": "ami-3e42b65f",
        "HVM64": "ami-374db956",
        "HVMG2": "ami-4c78d52d"
      },
      "ap-northeast-2": {
        "PV64": "NOT_SUPPORTED",
        "HVM64": "ami-2b408b45",
        "HVMG2": "NOT_SUPPORTED"
      },
      "ap-southeast-1": {
        "PV64": "ami-df9e4cbc",
        "HVM64": "ami-a59b49c6",
        "HVMG2": "ami-f3f95990"
      },
      "ap-southeast-2": {
        "PV64": "ami-63351d00",
        "HVM64": "ami-dc361ebf",
        "HVMG2": "ami-3a122e59"
      },
      "ap-south-1": {
        "PV64": "NOT_SUPPORTED",
        "HVM64": "ami-ffbdd790",
        "HVMG2": "ami-21a7d34e"
      },
      "us-east-2": {
        "PV64": "NOT_SUPPORTED",
        "HVM64": "ami-f6035893",
        "HVMG2": "NOT_SUPPORTED"
      },
      "sa-east-1": {
        "PV64": "ami-1ad34676",
        "HVM64": "ami-6dd04501",
        "HVMG2": "NOT_SUPPORTED"
      },
      "cn-north-1": {
        "PV64": "ami-77559f1a",
        "HVM64": "ami-8e6aa0e3",
        "HVMG2": "NOT_SUPPORTED"
      }
    }
  },
  "Resources": {
    "EC2R2FLSF": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "ExternalRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      },
      "DependsOn": [
        "AttachGateway"
      ]
    },
    "Subnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "GENIVPC"
        },
        "CidrBlock": "192.168.1.0/24",
	"AvailabilityZone" : {
	    "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ]
	}
      }
    },
    "Subnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "GENIVPC"
        },
        "CidrBlock": "192.168.2.0/24",
	"AvailabilityZone" : {
	    "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ]
	}
      }
    },
    "Subnet3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "GENIVPC"
        },
        "CidrBlock": "192.168.3.0/24",
	"AvailabilityZone" : {
	    "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ]
	}
      }
    },
    "ExternalRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "GENIVPC"
        }
      }
    },
    "SubnetRouteTableAssociation": {
	"Type": "AWS::EC2::SubnetRouteTableAssociation",
	"Properties": {
	    "SubnetId": {"Ref": "Subnet3" },
	    "RouteTableId": { "Ref": "ExternalRouteTable"}
	}
    },
    "NATRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
	"VpcId": { "Ref": "GENIVPC" }
      }
    },
    "NAT1RouteTableAssociation": {
	"Type": "AWS::EC2::SubnetRouteTableAssociation",
	"Properties": {
	    "SubnetId": {"Ref": "Subnet1" },
	    "RouteTableId": { "Ref": "NATRouteTable"}
	}
    },
    "NAT2RouteTableAssociation": {
	"Type": "AWS::EC2::SubnetRouteTableAssociation",
	"Properties": {
	    "SubnetId": {"Ref": "Subnet2" },
	    "RouteTableId": { "Ref": "NATRouteTable"}
	}
    },
    "NATRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "NATRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "NATGateway"
        }
      },
      "DependsOn": [
        "AttachGateway"
      ]
    },
    "GENIVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "192.168.0.0/16"
      }
    },
    "Bastion": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "InstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "NetworkInterfaces": [
          {
            "NetworkInterfaceId": {
              "Ref": "Interface2"
            },
	    "DeviceIndex": "2"
          },
          {
            "NetworkInterfaceId": {
              "Ref": "Interface1"
            },
	    "DeviceIndex": "1"
          },
          {
            "NetworkInterfaceId": {
              "Ref": "PublicInterface"
            },
	    "DeviceIndex": "0"
          }
        ],
        "IamInstanceProfile": {
	  "Ref": "RunCmdInstanceProfile"
        },
	"UserData": { "Fn::Base64" : { "Fn::Join" : ["", [
             "#!/bin/bash -xe\n",
	     "cd /tmp\n",
	     "echo ", {"Ref": "AWS::Region"}, " >  region.txt\n",
	     "curl https://amazon-ssm-",{"Ref": "AWS::Region"}, ".s3.amazonaws.com/latest/linux_amd64/amazon-ssm-agent.rpm -o amazon-ssm-agent.rpm\n",
	     "sudo yum install -y amazon-ssm-agent.rpm\n"
        ]]}}
      }
    },
    "Host1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet1"
        },
	"SecurityGroupIds": [ { "Ref": "SSHSecurityGroup" }],
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "InstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "IamInstanceProfile": {
	  "Ref": "RunCmdInstanceProfile"
        },
	"UserData": { "Fn::Base64" : { "Fn::Join" : ["", [
             "#!/bin/bash -xe\n",
	     "cd /tmp\n",
	     "echo ", {"Ref": "AWS::Region"}, " >  region.txt\n",
	     "curl https://amazon-ssm-",{"Ref": "AWS::Region"}, ".s3.amazonaws.com/latest/linux_amd64/amazon-ssm-agent.rpm -o amazon-ssm-agent.rpm\n",
	     "sudo yum install -y amazon-ssm-agent.rpm\n",
	     "sudo restart amazon-ssm-agent\n"
        ]]}}
      }
    },
    "Interface2": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet2"
        },
	"GroupSet": [ { "Ref": "SSHSecurityGroup" }]
      }
    },
    "Interface1": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet1"
        },
	"GroupSet": [ { "Ref": "SSHSecurityGroup" }]
      }
    },
    "Host2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet2"
        },
	"SecurityGroupIds": [ { "Ref": "SSHSecurityGroup" }],
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "InstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
	"IamInstanceProfile": {
	  "Ref": "RunCmdInstanceProfile"
        },
	"UserData": { "Fn::Base64" : { "Fn::Join" : ["", [
             "#!/bin/bash -xe\n",
	     "cd /tmp\n",
	     "echo ", {"Ref": "AWS::Region"}, " >  region.txt\n",
	     "curl https://amazon-ssm-",{"Ref": "AWS::Region"}, ".s3.amazonaws.com/latest/linux_amd64/amazon-ssm-agent.rpm -o amazon-ssm-agent.rpm\n",
	     "sudo yum install -y amazon-ssm-agent.rpm\n"
        ]]}}
      }
    },
    "PublicInterface": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet3"
        },
	"GroupSet": [ { "Ref": "SSHSecurityGroup" }]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "GENIVPC"
        }
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {}
    },
    "NATGateway": {
      "Type": "AWS::EC2::NatGateway",
      "DependsOn": "AttachGateway",
      "Properties": {
	"AllocationId" : { "Fn::GetAtt" : ["NATEIP", "AllocationId"]},
	"SubnetId": { "Ref": "Subnet3" }
      }
    },
    "ExternalIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      },
      "DependsOn": [
        "AttachGateway"
      ]
    },
    "NATEIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      },
      "DependsOn": [
        "AttachGateway"
      ]
    },
    "IPAssociation": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "ExternalIP",
            "AllocationId"
          ]
        },
        "NetworkInterfaceId": {
          "Ref": "PublicInterface"
        }
      }
    },
    "SSHSecurityGroup": {
	"Type": "AWS::EC2::SecurityGroup",
	"Properties": {
	    "VpcId": {
		"Ref": "GENIVPC"
	    },
	    "GroupDescription": "SSH and ICMP Access from the world",
	    "SecurityGroupIngress": [
		{ "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "0.0.0.0/0" },
		{ "IpProtocol": "icmp", "FromPort": "8", "ToPort": "-1", "CidrIp": "0.0.0.0/0" }
	    ]
	}
    },
    "RunCmdInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ { "Ref": "RunCmdRole" } ]
      }
    },
    "RunCmdRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
	"AssumeRolePolicyDocument": {
	    "Version": "2012-10-17",
	    "Statement": [
		{
		    "Sid": "",
		    "Effect": "Allow",
		    "Principal": {
			"Service": "ec2.amazonaws.com"
		    },
		    "Action": "sts:AssumeRole"
		}
	    ]
        },
	"Path": "/"
      }
    },
    "RunCmdPolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "runcmd",
	"Roles": [ { "Ref": "RunCmdRole" } ],
        "PolicyDocument": {
	    "Version": "2012-10-17",
	    "Statement": [
		{
		    "Effect": "Allow",
		    "Action": [
			"ssm:DescribeAssociation",
			"ssm:GetDeployablePatchSnapshotForInstance",
			"ssm:GetDocument",
			"ssm:GetParameters",
			"ssm:ListAssociations",
			"ssm:ListInstanceAssociations",
			"ssm:PutInventory",
			"ssm:UpdateAssociationStatus",
			"ssm:UpdateInstanceAssociationStatus",
			"ssm:UpdateInstanceInformation"
		    ],
		    "Resource": "*"
		},
		{
		    "Effect": "Allow",
		    "Action": [
			"ec2messages:AcknowledgeMessage",
			"ec2messages:DeleteMessage",
			"ec2messages:FailMessage",
			"ec2messages:GetEndpoint",
			"ec2messages:GetMessages",
			"ec2messages:SendReply"
		    ],
		    "Resource": "*"
		},
		{
		    "Effect": "Allow",
		    "Action": [
			"cloudwatch:PutMetricData"
		    ],
		    "Resource": "*"
		},
		{
		    "Effect": "Allow",
		    "Action": [
			"ec2:DescribeInstanceStatus"
		    ],
		    "Resource": "*"
		},
		{
		    "Effect": "Allow",
		    "Action": [
			"ds:CreateComputer",
			"ds:DescribeDirectories"
		    ],
		    "Resource": "*"
		},
		{
		    "Effect": "Allow",
		    "Action": [
			"logs:CreateLogGroup",
			"logs:CreateLogStream",
			"logs:DescribeLogGroups",
			"logs:DescribeLogStreams",
			"logs:PutLogEvents"
		    ],
		    "Resource": "*"
		},
		{
		    "Effect": "Allow",
		    "Action": [
			"s3:PutObject",
			"s3:GetObject",
			"s3:AbortMultipartUpload",
			"s3:ListMultipartUploadParts",
			"s3:ListBucketMultipartUploads"
		    ],
		    "Resource": "*"
		},
		{
		    "Effect": "Allow",
		    "Action": [
			"s3:ListBucket"
		    ],
		    "Resource": "arn:aws:s3:::amazon-ssm-packages-*"
		}
	    ]
	}
      }
    }
  },
  "Outputs": {
    "EIP": {
      "Value": {
        "Fn::Join": [
          " ",
          [
            "IP Address",
            {
              "Ref": "ExternalIP"
            },
            " on subnet ",
            {
              "Ref": "Subnet3"
            }
          ]
        ]
      },
      "Description": "Primary public IP of gateway host"
    },
    "Host1": {
       "Value": {
	   "Fn::Join": [
	       " ",
	       [ "Private IP", { "Fn::GetAtt" : [ "Host1", "PrivateIp" ] } ] ] },
       "Description": "Primary private IP of host 1"
    },
    "Host2": {
      "Value": {
	  "Fn::Join": [
	      " ",
	      [ "Private IP", { "Fn::GetAtt" : [ "Host2", "PrivateIp" ] } ] ] },
      "Description": "Primary private IP of host 2"
    }
  }
}
